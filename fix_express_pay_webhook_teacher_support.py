#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook'–æ–≤ Express-Pay –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–∫—É–ø–æ–∫ —É—á–∏—Ç–µ–ª–µ–π
"""

def handle_new_payment_notification_fixed(data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    try:
        account_no = data.get('AccountNo')
        invoice_no = data.get('InvoiceNo')
        amount = data.get('Amount')
        created = data.get('Created')
        service = data.get('Service')
        
        print(f"Webhook: –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ - AccountNo: {account_no}, InvoiceNo: {invoice_no}, Amount: {amount}")
        
        # –ò—â–µ–º –ø–æ–∫—É–ø–∫—É –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        purchase = None
        purchase_type = None
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Å—á—ë—Ç–∞ (InvoiceNo), –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ payment_id
        if invoice_no:
            # –ò—â–µ–º –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–∫—É–ø–∫–∞—Ö
            purchase = TicketPurchase.query.filter_by(payment_id=str(invoice_no)).first()
            if purchase:
                purchase_type = 'user'
            else:
                # –ò—â–µ–º –≤ –ø–æ–∫—É–ø–∫–∞—Ö —É—á–∏—Ç–µ–ª–µ–π
                purchase = TeacherTicketPurchase.query.filter_by(payment_id=str(invoice_no)).first()
                if purchase:
                    purchase_type = 'teacher'
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ InvoiceNo, –ø—Ä–æ–±—É–µ–º –ø–æ AccountNo (—Ä–∞–≤–µ–Ω purchase.id –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏)
        if not purchase and account_no:
            try:
                # –ò—â–µ–º –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–∫—É–ø–∫–∞—Ö
                purchase = TicketPurchase.query.get(int(account_no))
                if purchase:
                    purchase_type = 'user'
                else:
                    # –ò—â–µ–º –≤ –ø–æ–∫—É–ø–∫–∞—Ö —É—á–∏—Ç–µ–ª–µ–π
                    purchase = TeacherTicketPurchase.query.get(int(account_no))
                    if purchase:
                        purchase_type = 'teacher'
            except Exception:
                purchase = None
        
        if not purchase:
            print(f"Webhook: –ø–æ–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (InvoiceNo={invoice_no}, AccountNo={account_no})")
            return jsonify({'error': 'Purchase not found'}), 404
        
        print(f"Webhook: –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞ —Ç–∏–ø–∞ {purchase_type} (ID: {purchase.id})")
        
        # –ù–µ –Ω–∞—á–∏—Å–ª—è–µ–º –ø–æ CmdType=1, —Ç.–∫. –¥–∞–ª–µ–µ –ø—Ä–∏–¥—ë—Ç CmdType=3 —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
        # –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if not purchase.payment_status:
            purchase.payment_status = 'pending'
        
        db.session.commit()
        print(f"Webhook: –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (InvoiceNo={invoice_no}, AccountNo={account_no}, —Ç–∏–ø: {purchase_type})")
        
        return jsonify({'success': True, 'purchase_type': purchase_type}), 200
        
    except Exception as e:
        print(f"Webhook: –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

def handle_payment_cancellation_fixed(data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –ø–ª–∞—Ç–µ–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    try:
        account_no = data.get('AccountNo')
        payment_no = data.get('PaymentNo')
        
        print(f"Webhook: –æ—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞ - AccountNo: {account_no}, PaymentNo: {payment_no}")
        
        # –ò—â–µ–º –ø–æ–∫—É–ø–∫—É –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        purchase = None
        purchase_type = None
        
        # –ò—â–µ–º –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–∫—É–ø–∫–∞—Ö
        purchase = TicketPurchase.query.filter_by(payment_id=str(account_no)).first()
        if purchase:
            purchase_type = 'user'
        else:
            # –ò—â–µ–º –≤ –ø–æ–∫—É–ø–∫–∞—Ö —É—á–∏—Ç–µ–ª–µ–π
            purchase = TeacherTicketPurchase.query.filter_by(payment_id=str(account_no)).first()
            if purchase:
                purchase_type = 'teacher'
        
        if not purchase:
            print(f"Webhook: –ø–æ–∫—É–ø–∫–∞ —Å payment_id {account_no} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return jsonify({'error': 'Purchase not found'}), 404
        
        print(f"Webhook: –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞ —Ç–∏–ø–∞ {purchase_type} –¥–ª—è –æ—Ç–º–µ–Ω—ã (ID: {purchase.id})")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        purchase.payment_status = 'canceled'
        
        db.session.commit()
        print(f"Webhook: –ø–ª–∞—Ç–µ–∂ {account_no} –æ—Ç–º–µ–Ω–µ–Ω (—Ç–∏–ø: {purchase_type})")
        
        return jsonify({'success': True, 'purchase_type': purchase_type}), 200
        
    except Exception as e:
        print(f"Webhook: –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–º–µ–Ω—ã –ø–ª–∞—Ç–µ–∂–∞: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

def handle_status_change_notification_fixed(data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å—á–µ—Ç–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"""
    try:
        status = data.get('Status')
        account_no = data.get('AccountNo')
        invoice_no = data.get('InvoiceNo')
        amount = data.get('Amount')
        created = data.get('Created')
        
        print(f"Webhook: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ - AccountNo: {account_no}, InvoiceNo: {invoice_no}, Status: {status}")
        
        # –ò—â–µ–º –ø–æ–∫—É–ø–∫—É –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        purchase = None
        purchase_type = None
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–∫—É–ø–∫—É –ø–æ –Ω–æ–º–µ—Ä—É —Å—á–µ—Ç–∞ (InvoiceNo)
        if invoice_no:
            # –ò—â–µ–º –≤ –æ–±—ã—á–Ω—ã—Ö –ø–æ–∫—É–ø–∫–∞—Ö
            purchase = TicketPurchase.query.filter_by(payment_id=str(invoice_no)).first()
            if purchase:
                purchase_type = 'user'
            else:
                # –ò—â–µ–º –≤ –ø–æ–∫—É–ø–∫–∞—Ö —É—á–∏—Ç–µ–ª–µ–π
                purchase = TeacherTicketPurchase.query.filter_by(payment_id=str(invoice_no)).first()
                if purchase:
                    purchase_type = 'teacher'
        
        if not purchase:
            print(f"Webhook: –ø–æ–∫—É–ø–∫–∞ —Å payment_id {invoice_no} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return jsonify({'error': 'Purchase not found'}), 404
        
        print(f"Webhook: –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∞ —Ç–∏–ø–∞ {purchase_type} –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (ID: {purchase.id})")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
        old_status = purchase.payment_status
        new_status = None
        
        if status == 1:
            new_status = 'pending'  # –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É
        elif status == 2:
            new_status = 'expired'  # –ü—Ä–æ—Å—Ä–æ—á–µ–Ω
        elif status == 3 or status == 6:
            new_status = 'succeeded'  # –û–ø–ª–∞—á–µ–Ω –∏–ª–∏ –û–ø–ª–∞—á–µ–Ω —Å –ø–æ–º–æ—â—å—é –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã
        elif status == 4:
            new_status = 'partial'  # –û–ø–ª–∞—á–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ
        elif status == 5:
            new_status = 'canceled'  # –û—Ç–º–µ–Ω–µ–Ω
        elif status == 7:
            new_status = 'refunded'  # –ü–ª–∞—Ç–µ–∂ –≤–æ–∑–≤—Ä–∞—â–µ–Ω
        else:
            print(f"Webhook: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
            new_status = 'unknown'
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        purchase.payment_status = new_status
        
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "–æ–ø–ª–∞—á–µ–Ω" –∏ —Ä–∞–Ω–µ–µ –Ω–µ –±—ã–ª –æ–ø–ª–∞—á–µ–Ω, –Ω–∞—á–∏—Å–ª—è–µ–º –∂–µ—Ç–æ–Ω—ã
        if new_status == 'succeeded' and old_status != 'succeeded' and not purchase.payment_confirmed_at:
            if purchase_type == 'user':
                user = User.query.get(purchase.user_id)
                if user:
                    user.tickets += purchase.quantity
                    purchase.payment_confirmed_at = datetime.now()
                    print(f"Webhook: –Ω–∞—á–∏—Å–ª–µ–Ω–æ {purchase.quantity} –∂–µ—Ç–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}")
            elif purchase_type == 'teacher':
                teacher = Teacher.query.get(purchase.teacher_id)
                if teacher:
                    teacher.tickets += purchase.quantity
                    purchase.payment_confirmed_at = datetime.now()
                    print(f"Webhook: –Ω–∞—á–∏—Å–ª–µ–Ω–æ {purchase.quantity} –∂–µ—Ç–æ–Ω–æ–≤ —É—á–∏—Ç–µ–ª—é {teacher.id}")
        
        db.session.commit()
        print(f"Webhook: —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ {invoice_no} –æ–±–Ω–æ–≤–ª–µ–Ω —Å {old_status} –Ω–∞ {new_status} (—Ç–∏–ø: {purchase_type})")
        
        return jsonify({'success': True, 'purchase_type': purchase_type}), 200
        
    except Exception as e:
        print(f"Webhook: –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ app.py
"""
from app import TicketPurchase, TeacherTicketPurchase, User, Teacher, db
from datetime import datetime
from flask import jsonify
"""

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook'–æ–≤ Express-Pay")
    print("=" * 60)
    print()
    print("üìù –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
    print("1. –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ TeacherTicketPurchase")
    print("2. –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ (user/teacher)")
    print("3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∂–µ—Ç–æ–Ω–æ–≤ –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π")
    print("4. –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print()
    print("üîß –ö–∞–∫ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ app.py –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏")
    print("2. –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã")
    print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ webhook'–∏ —Å –ø–æ–∫—É–ø–∫–∞–º–∏ —É—á–∏—Ç–µ–ª–µ–π")
